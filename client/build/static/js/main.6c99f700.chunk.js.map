{"version":3,"sources":["components/ConversationsDrawer/ConversationsDrawer.module.css","pages/Chat/Chat.module.css","core/axios.ts","redux/constants.ts","redux/actions/auth.ts","components/Logo/index.tsx","components/Navbar/index.tsx","utils/formatDate.ts","components/Avatar/index.tsx","components/MessageItem/index.tsx","redux/actions/errors.ts","components/Loader/index.tsx","containers/EmojiMenu/index.tsx","utils/outsideClick.ts","pages/Chat/index.tsx","redux/actions/messages.ts","containers/Toast/Toast.tsx","containers/Toast/ToastContainer.tsx","components/ConversationItem/index.tsx","components/Button/index.tsx","components/Modal/index.tsx","components/Search/index.tsx","components/ConversationsDrawer/index.tsx","redux/actions/conversations.ts","components/ChatStarter/index.tsx","pages/Conversations/index.tsx","utils/sliceText.ts","pages/auth/Login.tsx","pages/auth/Register.tsx","core/socket.ts","App.tsx","utils/isAccessTokenExpired.ts","redux/reducers/auth.ts","redux/reducers/messages.ts","utils/sortConversationByDate.ts","redux/reducers/conversations.ts","redux/reducers/errors.ts","redux/store.ts","index.tsx","pages/Conversations/Conversations.module.css","containers/Toast/Toast.module.css","components/MessageItem/MessageItem.module.css","containers/EmojiMenu/EmojiMenu.module.css","components/ConversationItem/ConversationItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/Logo/Logo.module.css","components/Loader/Loader.module.css","components/Search/Search.module.css","components/ChatStarter/ChatStarter.module.css","components/Navbar/Navbar.module.css","pages/auth/Auth.module.css","components/Avatar/Avatar.module.css","assets/styles/App.module.css"],"names":["module","exports","axios","defaults","baseURL","process","constants","setAuthToken","token","headers","common","logoutAction","history","dispatch","a","localStorage","removeItem","type","USER_LOGOUT","push","setCurrentUser","user","SET_CURRENT_USER","payload","Logo","className","classes","logo","link","to","icon","Navbar","navbar","navbarInner","formatDate","date","time","split","day","slice","month","year","hours","fullDate","timeOnly","Avatar","src","size","avatar","alt","style","width","height","MessageItem","mine","text","name","rightMessage","leftMessage","rightText","leftText","rightTime","leftTime","catchErrorAction","err","CATCH_ERROR","removeErrorAction","REMOVE_ERROR","Loader","color","loader","circular","viewBox","path","cx","cy","r","fill","strokeWidth","strokeMiterlimit","stroke","EmojiMenu","onClick","useState","open","setOpen","menuRef","useRef","useEffect","ref","cb","handleClickOutside","e","current","contains","target","document","addEventListener","outsideClick","emojis","emoji","unicode","emojisList","emojisListHide","map","i","Date","now","Chat","bottomRef","message","setMessage","useDispatch","useSelector","state","auth","messages","loading","conversations","id","useParams","status","MESSAGES_REQUEST","post","conversationId","then","res","MESSAGES_SUCCESS_REQUEST","data","catch","console","log","getAllAction","scrollTo","chatWrapper","chat","header","item","_id","author","partner","messagesBox","createdBy","createdAt","textForm","onSubmit","preventDefault","length","response","CONVERSATIONS_FAIL_REQUEST","createAction","innerHTML","textField","placeholder","value","onChange","sendIcon","disabled","Toast","children","setTimeout","toast","toastIcon","toastContent","toastClose","toastCloseIcon","ToastContainer","toastContainer","ConversationItem","conversation","activeClassName","active","Button","button","loadingWrapper","showLoading","hideLoading","Modal","close","modalWrapper","modalWrapperHide","modal","modalHide","stopPropagation","Search","form","input","ConversationsDrawer","setLoading","openModal","setOpenModal","modalUser","setModalUser","searchResults","setSearchResults","searchLength","setSearchLength","searchText","setSearchText","messageText","setMessageText","page","setPage","limit","searchUsers","result","users","count","drawer","openDrawer","searchListLoader","searchList","searchItem","searchName","openModalHandler","buttons","Math","ceil","searchInfo","modalForm","CREATE_CONVERSATION_REQUEST","modalButtons","ChatStarter","starter","subtitle","Conversations","setOpenDrawer","useHistory","openDrawerHandler","CONVERSATIONS_REQUEST","get","CONVERSATIONS_SUCCESS_REQUEST","conversationsWrapper","conversationInfo","icons","tooltip","data-tooltip","conversationsList","lastMessage","empty","Login","error","useForm","register","handleSubmit","errors","formState","values","AUTH_REQUEST","setItem","decoded","jwt_decode","SUCCESS_REQUEST","FAIL_REQUEST","loginAction","noValidate","inputWrapper","pattern","required","email","minLength","password","formLinkWrapper","formSpan","formLink","Register","registerAction","socket","io","App","loggedIn","getItem","exp","floor","getTime","isAccessTokenExpired","on","MESSAGES_ADD_MESSAGE","addMessageAction","CONVERSATIONS_UPDATE_LAST_MESSAGE","updateLastMessage","CONVERSATIONS_ADD_CONVERSATION","addConversationAction","app","exact","component","from","initialState","sortConversationByDate","dates","sort","b","reverse","rootReducer","combineReducers","action","undefined","MESSAGES_FAIL_REQUEST","updatedAt","updated","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,OAAS,oCAAoC,WAAa,wCAAwC,MAAQ,mCAAmC,WAAa,wCAAwC,iBAAmB,8CAA8C,WAAa,wCAAwC,WAAa,wCAAwC,UAAY,uCAAuC,WAAa,wCAAwC,MAAQ,mCAAmC,KAAO,kCAAkC,QAAU,qCAAqC,aAAe,0CAA0C,QAAU,qCAAqC,KAAO,oC,mBCAztBD,EAAOC,QAAU,CAAC,OAAS,qBAAqB,YAAc,0BAA0B,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,OAAS,qBAAqB,YAAc,0BAA0B,SAAW,uBAAuB,UAAY,wBAAwB,KAAO,mBAAmB,SAAW,yB,iKCA/YC,IAAMC,SAASC,QAAUC,wBAElB,ICHKC,EDGCC,EAAe,SAACC,GACrBA,EACAN,IAAMC,SAASM,QAAQC,OAAvB,cAAiDF,SAE1CN,IAAMC,SAASM,QAAQC,OAAvB,gB,SCPHJ,K,iCAAAA,E,uCAAAA,E,iCAAAA,E,yCAAAA,E,+BAAAA,E,0BAAAA,E,4BAAAA,E,4DAAAA,E,8DAAAA,E,wDAAAA,E,wEAAAA,E,wFAAAA,E,kFAAAA,E,+EAAAA,E,qFAAAA,E,6CAAAA,E,oDAAAA,E,8CAAAA,E,qDAAAA,M,KCSL,IA8DMK,EAAe,SAACC,GACzB,8CAAO,WAAOC,GAAP,SAAAC,EAAA,sDACHC,aAAaC,WAAW,YACxBH,EAAS,CAAEI,KAAMX,EAAUY,cAC3BN,EAAQO,KAAK,UAHV,2CAAP,uDAOSC,EAAiB,SAACC,GAC3B,MAAO,CACHJ,KAAMX,EAAUgB,iBAChBC,QAASF,I,gCC5EJG,EAAW,WACtB,OACE,qBAAKC,UAAWC,IAAQC,KAAxB,SACE,eAAC,IAAD,CAASF,UAAWC,IAAQE,KAAMC,GAAG,IAArC,UACE,cAAC,IAAD,CAAYJ,UAAWC,IAAQI,OADjC,iB,iBCJOC,EAAa,WACxB,OACE,wBAAQN,UAAWC,IAAQM,OAA3B,SACE,qBAAKP,UAAS,UAAKC,IAAQO,YAAb,cAAd,SACE,cAAC,EAAD,S,+BCTKC,EAAa,SAACC,GACvB,IAAMC,EAAOD,EAAKE,MAAM,KAAK,GACvBC,EAAMF,EAAKG,MAAM,EAAG,IACpBC,EAAQJ,EAAKG,MAAM,EAAG,GACtBE,EAAOL,EAAKG,MAAM,EAAG,GACrBG,EAAQP,EAAKE,MAAM,KAAK,GAAGE,MAAM,EAAG,GAE1C,MAAO,CACHI,SADG,WAEC,MAAM,GAAN,OAAUL,EAAV,YAAiBE,EAAjB,YAA0BC,EAA1B,eAAqCC,IAEzCE,SAJG,WAKC,OAAOF,K,iBCJNG,EAA0B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAC7C,OACE,qBACEtB,UAAWC,IAAQsB,OACnBF,IAAKA,EACLG,IAAI,SACJC,MAAO,CAAEC,MAAOJ,EAAMK,OAAQL,M,iBCDvBM,EAAgC,SAAC,GAMvC,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,KACAP,EAGI,EAHJA,OACAQ,EAEI,EAFJA,KACApB,EACI,EADJA,KAEA,OACE,qBAAIX,UAAW6B,EAAO5B,IAAQ+B,aAAe/B,IAAQgC,YAArD,UACE,sBAAKjC,UAAWC,IAAQL,KAAxB,UACE,cAAC,EAAD,CAAQyB,IAAKE,EAAQD,KAAK,SAC1B,+BAAOS,OAET,oBAAG/B,UAAW6B,EAAO5B,IAAQiC,UAAYjC,IAAQkC,SAAjD,UACGL,EACD,sBAAM9B,UAAW6B,EAAO5B,IAAQmC,UAAYnC,IAAQoC,SAApD,SACG5B,EAAWE,GAAMQ,oBC1BfmB,EAAmB,SAACC,GAC7B,MAAO,CACH/C,KAAMX,EAAU2D,YAChB1C,QAASyC,IAIJE,EAAoB,WAC7B,MAAO,CACHjD,KAAMX,EAAU6D,e,iBCJXC,EAA0B,SAAC,GAAsB,IAApBjB,EAAmB,EAAnBA,MAAOkB,EAAY,EAAZA,MAC/C,OACE,qBAAK5C,UAAWC,IAAQ4C,OAAQpB,MAAO,CAAEC,MAAOA,GAAhD,SACE,qBAAK1B,UAAWC,IAAQ6C,SAAUC,QAAQ,cAA1C,SACE,wBACE/C,UAAWC,IAAQ+C,KACnBC,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,KAAK,OACLC,YAAY,IACZC,iBAAiB,KACjBC,OAAQX,S,0CCHLY,EAA4B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1C,EAAwBC,oBAAkB,GAA1C,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUC,iBAAyB,MAUzC,OAJAC,qBAAU,YCzBgB,SAACC,EAAUC,GACnC,IAAMC,EAAqB,SAACC,GACpBH,EAAII,UAAYJ,EAAII,QAAQC,SAASF,EAAEG,SACvCL,GAAG,IAGXM,SAASC,iBAAiB,YAAaN,GDoBvCO,CAAaZ,EAASD,KACrB,CAACC,IAGF,sBAAK7D,UAAWC,IAAQyE,OAAxB,UACE,sBAAM1E,UAAWC,IAAQ0E,MAAOlB,QAVV,WACxBG,GAASD,IASP,SACGe,EAAO,GAAGE,UAEb,oBACEZ,IAAKH,EACL7D,UACE2D,EACI1D,IAAQ4E,WADR,UAEG5E,IAAQ4E,WAFX,YAEyB5E,IAAQ6E,gBALzC,SAQGJ,EAAOK,KAAI,SAACJ,EAAOK,GAAR,OACV,oBAAyBhF,UAAWC,IAAQ0E,MAAOlB,QAASA,EAA5D,SACGkB,EAAMC,SADAI,EAAIC,KAAKC,gBEzBfC,EAAW,WACtB,IAAMC,EAAYtB,iBAAyB,MAC3C,EAA8BJ,mBAAiB,IAA/C,mBAAO2B,EAAP,KAAgBC,EAAhB,KACMlG,EAAWmG,cACT3F,EAAS4F,aAAY,SAACC,GAAD,OAAgBA,EAAMC,QAA3C9F,KACR,EAA8B4F,aAAY,SAACC,GAAD,OAAgBA,EAAME,YAAxDA,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QACVC,EAAkBL,aAAY,SAACC,GAAD,OAAgBA,EAAMI,iBAApDA,cACAC,EAAOC,cAAPD,GACR,EAA4BpC,mBAAiB,WAA7C,mBAAOsC,EAAP,UA2BA,OAVAjC,qBAAU,WACR3E,ECrCwB,SAAC0G,GACzB,8CAAO,WAAO1G,GAAP,SAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMX,EAAUoH,mBAE3BxH,IACKyH,KAAK,iBAAkB,CAAEC,eAAgBL,IAAMM,MAAK,SAAAC,GACjDjH,EAAS,CAAEI,KAAMX,EAAUyH,yBAA0BxG,QAASuG,EAAIE,UAErEC,OAAM,SAAAjE,GAAG,OACNkE,QAAQC,IAAInE,MARjB,2CAAP,sDDoCSoE,CAAab,MACrB,CAACA,IAEJ/B,qBAAU,WACJqB,EAAUhB,SACZgB,EAAUhB,QAAQwC,SAAS,EAAG,UAE/B,CAACjB,IAGF,qBAAK3F,UAAS,UAAKC,IAAQ4G,YAAb,cAAd,SACGjB,EACC,qBAAK5F,UAAWC,IAAQ4C,OAAxB,SACE,cAAC,EAAD,CAAQnB,MAAM,OAAOkB,MAAM,cAG7B,sBAAK5C,UAAWC,IAAQ6G,KAAxB,UACE,sBAAK9G,UAAWC,IAAQ8G,OAAxB,UACE,cAAC,IAAD,CAAM3G,GAAG,QAAT,SACE,cAAC,IAAD,CAAoBJ,UAAWC,IAAQI,SAEzC,sBAAKL,UAAWC,IAAQL,KAAxB,UACE,cAAC,EAAD,CACEyB,IAAI,+IACJC,KAAK,SAEP,sBAAKtB,UAAWC,IAAQ6B,KAAxB,UACE,mBAAG9B,UAAWC,IAAQ8B,KAAtB,SACG8D,EAAcd,KAAI,SAACiC,GAClB,GAAIA,EAAKC,MAAQnB,EACf,OAAOkB,EAAKE,OAAOD,MAAQrH,EAAKqH,IAC5BD,EAAKG,QAAQpF,KACbiF,EAAKE,OAAOnF,UAItB,sBAAM/B,UAAWC,IAAQ+F,OAAzB,SAAkCA,UAGtC,wBAAQhG,UAAWC,IAAQI,KAA3B,SACE,cAAC,IAAD,SAGJ,oBAAIL,UAAWC,IAAQmH,YAAapD,IAAKoB,EAAzC,SACGO,EAASZ,KAAI,SAACM,GAAD,OACZ,cAAC,EAAD,CAEExD,KAAMjC,EAAKqH,MAAQ5B,EAAQgC,UAAUJ,IACrC1F,OAAO,6JACPQ,KAAMsD,EAAQgC,UAAUtF,KACxBD,KAAMuD,EAAQvD,KACdnB,KAAM0E,EAAQiC,WALTjC,EAAQ4B,UASnB,uBAAMjH,UAAWC,IAAQsH,SAAUC,SAnEhB,SAACrD,GAC1BA,EAAEsD,iBACiB,IAAnBpC,EAAQqC,QAAgBtI,ECbA,SAAC0G,EAAYK,EAAwBd,GAC7D,8CAAO,WAAOjG,GAAP,SAAAC,EAAA,sDACHZ,IACKyH,KAAK,iBAAkB,CAAEpE,KAAMuD,EAASc,iBAAgBL,OACxDU,OAAM,SAAAjE,GACCA,EAAIoF,UACJvI,EAASkD,EAAiBC,EAAIoF,SAASpB,KAAKlB,UAC5CjG,EAAS,CAAEI,KAAMX,EAAU+I,+BAE3BxI,EAAS,CAAEI,KAAMX,EAAU2D,YAAa1C,QAAS,2CACjDV,EAAS,CAAEI,KAAMX,EAAU+I,iCATpC,2CAAP,sDDYiCC,CAAajI,EAAKqH,IAAKnB,EAAIT,IAE5DC,EAAW,KA+DL,UACE,wBAAQtF,UAAWC,IAAQI,KAA3B,SACE,cAAC,IAAD,MAEF,cAAC,EAAD,CAAWoD,QAhEG,SAACU,GACvBmB,EAAWD,EAAUlB,EAAEG,OAAOwD,cAgEtB,uBACE9H,UAAWC,IAAQ8H,UACnBvI,KAAK,OACLwI,YAAY,aACZC,MAAO5C,EACP6C,SAjFe,SAAC/D,GAC1BmB,EAAWnB,EAAEG,OAAO2D,UAkFZ,wBACEjI,UAAS,UAAKC,IAAQI,KAAb,YAAqBJ,IAAQkI,UACtCC,SAA6B,IAAnB/C,EAAQqC,OAFpB,SAIE,cAAC,IAAD,e,yBEnGDW,EAAoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5BlJ,EAAWmG,cAYjB,OANAxB,qBAAU,WACRwE,YAAW,WACTnJ,EAASqD,OACR,OACF,IAGD,sBAAKzC,UAAWC,IAAQuI,MAAxB,UACE,sBAAMxI,UAAWC,IAAQwI,UAAzB,SACE,cAAC,IAAD,MAEF,qBAAKzI,UAAWC,IAAQyI,aAAxB,SAAuCJ,IACvC,wBAAQtI,UAAWC,IAAQ0I,WAAYlF,QAhBhB,WACzBrE,EAASqD,MAeP,SACE,cAAC,IAAD,CAASzC,UAAWC,IAAQ2I,uBC3BvBC,GAA0C,SAAC,GAAe,IAAbL,EAAY,EAAZA,MACxD,OACE,qBAAKxI,UAAWC,IAAQ6I,eAAxB,SACE,cAAC,EAAD,UAAQN,O,oBCADO,GAA0C,SAAC,GAKjD,IAJL/F,EAII,EAJJA,KACAqC,EAGI,EAHJA,QACAtD,EAEI,EAFJA,KACApB,EACI,EADJA,KAEA,OACE,eAAC,IAAD,CACEX,UAAWC,KAAQ+I,aACnB5I,GAAI,SAAW4C,EACfiG,gBAAiBhJ,KAAQiJ,OAH3B,UAKE,cAAC,EAAD,CACE7H,IACE,+IAEFC,KAAK,SAEP,sBAAKtB,UAAWC,KAAQ6B,KAAxB,UACE,mBAAG9B,UAAWC,KAAQ8B,KAAtB,SAA6BA,IAC7B,mBAAG/B,UAAWC,KAAQoF,QAAtB,SAAgCA,OAElC,sBAAMrF,UAAWC,KAAQU,KAAzB,SAAgCA,Q,wCCvBzBwI,GAA0B,SAAC,GAKjC,IAJLb,EAII,EAJJA,SACA7E,EAGI,EAHJA,QACA2E,EAEI,EAFJA,SACAxC,EACI,EADJA,QAEA,OACE,yBAAQ5F,UAAWC,KAAQmJ,OAAQhB,SAAUA,EAAU3E,QAASA,EAAhE,UACG6E,EACD,qBACEtI,UACE4F,EAAO,UACA3F,KAAQoJ,eADR,YAC0BpJ,KAAQqJ,aADlC,UAEArJ,KAAQoJ,eAFR,YAE0BpJ,KAAQsJ,aAJ7C,SAOE,cAAC,EAAD,CAAQ7H,MAAM,OAAOkB,MAAM,e,oBClBtB4G,GAAwB,SAAC,GAAgC,IAA9BlB,EAA6B,EAA7BA,SAAU7C,EAAmB,EAAnBA,MAAOgE,EAAY,EAAZA,MACvD,OACE,qBACEzJ,UACEyF,EACIxF,KAAQyJ,aADP,UAEEzJ,KAAQyJ,aAFV,YAE0BzJ,KAAQ0J,kBAEzClG,QAASgG,EANX,SAQE,qBACEzJ,UACEyF,EAAQxF,KAAQ2J,MAAX,UAAsB3J,KAAQ2J,MAA9B,YAAuC3J,KAAQ4J,WAEtDpG,QAAS,SAACU,GACRA,EAAE2F,mBALN,SAQGxB,O,oBChBIyB,GAA0B,SAAC,GAAsC,IAApCvC,EAAmC,EAAnCA,SAAUU,EAAyB,EAAzBA,SAAUE,EAAe,EAAfA,SAC5D,OACE,uBAAMpI,UAAWC,KAAQ+J,KAAMxC,SAAUA,EAAzC,UACE,uBACExH,UAAWC,KAAQgK,MACnBjC,YAAY,YACZE,SAAUA,IAEZ,wBAAQlI,UAAWC,KAAQmJ,OAAQhB,SAAUA,EAA7C,SACE,cAAC,IAAD,U,oBCEK8B,GAAuC,SAAC,GAAsB,IAApBzE,EAAmB,EAAnBA,MAAOgE,EAAY,EAAZA,MACtDrK,EAAWmG,cACT3F,EAAS4F,aAAY,SAACC,GAAD,OAAgBA,EAAMC,QAA3C9F,KACR,EAA8B8D,oBAAkB,GAAhD,mBAAOkC,EAAP,KAAgBuE,EAAhB,KACA,EAAkCzG,oBAAkB,GAApD,mBAAO0G,EAAP,KAAkBC,EAAlB,KACA,EAAkC3G,qBAAlC,mBAAO4G,EAAP,KAAkBC,EAAlB,KACA,EAA0C7G,mBAAkB,IAA5D,mBAAO8G,EAAP,KAAsBC,EAAtB,KACA,EAAwC/G,mBAAiB,GAAzD,mBAAOgH,EAAP,KAAqBC,EAArB,KACA,EAAoCjH,mBAAiB,IAArD,mBAAOkH,EAAP,KAAmBC,EAAnB,KACA,EAAsCnH,mBAAiB,IAAvD,mBAAOoH,EAAP,KAAoBC,EAApB,KACA,EAAwBrH,mBAAiB,GAAzC,mBAAOsH,EAAP,KAAaC,EAAb,KACA,EAAgBvH,mBAAiB,IAA1BwH,EAAP,oBA6BMC,EAAc,SAACH,GACnBb,GAAW,GACX1L,IACGyH,KADH,wBACyB0E,EADzB,iBAC4CI,EAD5C,kBAC0DE,IACvD9E,MAAK,SAACgF,GACLX,EAAiBW,EAAO7E,KAAK8E,OAC7BV,EAAgBS,EAAO7E,KAAK+E,OAC5BnB,GAAW,MAEZ3D,OAAM,SAACjE,GACN4H,GAAW,GACX/K,EAASkD,EAAiBC,EAAIoF,SAASpB,KAAKlB,UAC5CoF,EAAiB,IACjBQ,EAAQ,OAqBd,OAJAlH,qBAAU,WACR6G,EAAWlD,QAAUyD,EAAYH,KAChC,CAACA,IAGF,qCACE,sBACEhL,UACEyF,EAAQxF,KAAQsL,OAAX,UAAuBtL,KAAQsL,OAA/B,YAAyCtL,KAAQuL,YAF1D,UAKE,wBAAQxL,UAAWC,KAAQwJ,MAAOhG,QAASgG,EAA3C,SACE,cAAC,IAAD,MAEF,cAAC,GAAD,CACEjC,SApBoB,SAACrD,GAC3BA,EAAEsD,iBACF0D,EAAYH,IAmBN9C,SAlDoB,SAAC/D,GAC3B0G,EAAc1G,EAAEG,OAAO2D,QAkDjBG,SAAgC,IAAtBwC,EAAWlD,QAAgB9B,IAEtCA,EACC,qBAAK5F,UAAWC,KAAQwL,iBAAxB,SACE,cAAC,EAAD,CAAQ/J,MAAM,OAAOkB,MAAM,cAG7B,oBAAI5C,UAAWC,KAAQyL,WAAvB,SACGlB,EAAczF,KAAI,SAACnF,GAAD,OACjB,qBAAII,UAAWC,KAAQ0L,WAAvB,UACE,sBAAM3L,UAAWC,KAAQ2L,WAAzB,SAAsChM,EAAKmC,OAC3C,cAAC,GAAD,CAAQ0B,QAAS,kBArFN,SAAC7D,GACxB2K,EAAa3K,GACbyK,GAAa,GAmFsBwB,CAAiBjM,IAAxC,SACE,cAAC,IAAD,CAAkBI,UAAWC,KAAQI,WAHDT,EAAKqH,UASzB,IAAzBuD,EAAc9C,QACb,qCACE,sBAAK1H,UAAWC,KAAQ6L,QAAxB,UACE,cAAC,GAAD,CACErI,QApDU,WACtBwH,EAAQD,EAAO,IAoDH5C,SAAmB,IAAT4C,GAAcpF,EAF1B,kBAMA,cAAC,GAAD,CACEnC,QAtDU,WACtBwH,EAAQD,EAAO,IAsDH5C,SACE2D,KAAKC,KAAKtB,EAAeQ,KAAWF,EAAO,GAAKpF,EAHpD,qBASF,sBAAK5F,UAAWC,KAAQgM,WAAxB,UACE,0CACSjB,EAAO,EAAI,IAAMe,KAAKC,KAAKtB,EAAeQ,MAEnD,qCACA,6CAAgBR,cAKxB,eAAC,GAAD,CAAOjF,MAAO2E,EAAWX,MAnHH,WACxBY,GAAa,IAkHX,UACE,gDACA,uBACErK,UAAWC,KAAQiM,UACnB1E,SA/G0B,SAACrD,GCpBG,IAAC+C,EAAgBC,EAAiB9B,EDqBtElB,EAAEsD,iBAEE6C,GACFlL,GCxBmC8H,EDwBDtH,EAAKqH,ICxBYE,EDwBPmD,EAAUrD,ICxBc5B,EDwBTyF,ECvB7D,uCAAO,WAAO1L,GAAP,eAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMX,EAAUsN,8BAErB5F,EAAO,CACTW,SACAC,UACA9B,WAGJ5G,IACKyH,KAAK,sBAAuBK,GAC5BC,OAAM,SAAAjE,GACCA,EAAIoF,UACJvI,EAASkD,EAAiBC,EAAIoF,SAASpB,KAAKlB,UAC5CjG,EAAS,CAAEI,KAAMX,EAAU+I,+BAE3BxI,EAAS,CAAEI,KAAMX,EAAU2D,YAAa1C,QAAS,2CACjDV,EAAS,CAAEI,KAAMX,EAAU+I,iCAjBpC,2CAAP,wDDyBAyC,GAAa,GACbU,EAAe,KAsGX,UAIE,uBACE/K,UAAS,UAAKC,KAAQgK,MAAb,YAAsBhK,KAAQ8B,MACvCkG,OAAgB,OAATqC,QAAS,IAATA,OAAA,EAAAA,EAAWvI,OAAQ,GAC1BqG,UAAQ,IAEV,0BACEpI,UAAS,UAAKC,KAAQgK,MAAb,YAAsBhK,KAAQoF,SACvC2C,YAAY,aACZE,SA7HmB,SAAC/D,GAC5B4G,EAAe5G,EAAEG,OAAO2D,QA6HhBA,MAAO6C,IAET,qBAAK9K,UAAWC,KAAQmM,aAAxB,SACE,cAAC,GAAD,+B,oBExKCC,GAAkB,WAC7B,OACE,sBAAKrM,UAAWC,KAAQqM,QAAxB,UACE,cAAC,IAAD,CAAYtM,UAAWC,KAAQI,OAC/B,0CACA,oBAAIL,UAAWC,KAAQsM,SAAvB,oDCYOC,GAAoB,WAC/B,MAAoC9I,oBAAkB,GAAtD,mBAAO8H,EAAP,KAAmBiB,EAAnB,KACMrN,EAAWmG,cACT3F,EAAS4F,aAAY,SAACC,GAAD,OAAgBA,EAAMC,QAA3C9F,KACR,EAAmC4F,aACjC,SAACC,GAAD,OAAgBA,EAAMI,iBADhBA,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,QAGjBzG,EAAUuN,cAMVC,EAAoB,WACxBF,GAAc,IAWhB,OAJA1I,qBAAU,WACR3E,EFnCA,uCAAO,WAAOA,GAAP,SAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMX,EAAU+N,wBAE3BnO,IACKoO,IAAI,uBAAuBzG,MAAK,SAAAC,GAC7BjH,EAAS,CAAEI,KAAMX,EAAUiO,8BAA+BhN,QAASuG,EAAIE,UAE1EC,OAAM,SAAAjE,GACCA,EAAIoF,UACJvI,EAASkD,EAAiBC,EAAIoF,SAASpB,KAAKlB,UAC5CjG,EAAS,CAAEI,KAAMX,EAAU+I,+BAE3BxI,EAAS,CAAEI,KAAMX,EAAU2D,YAAa1C,QAAS,2CACjDV,EAAS,CAAEI,KAAMX,EAAU+I,iCAbpC,2CAAP,yDEoCC,IAGD,sBAAK5H,UAAS,UAAKC,KAAQ8M,qBAAb,cAAd,UACE,sBAAK/M,UAAWC,KAAQ4F,cAAxB,UACE,cAAC,GAAD,CAAqBJ,MAAO+F,EAAY/B,MAXnB,WACzBgD,GAAc,MAWV,sBAAKzM,UAAWC,KAAQ+M,iBAAxB,UACE,sBAAKhN,UAAWC,KAAQ6B,KAAxB,UACE,cAAC,EAAD,CACER,KAAK,OACLD,IAAI,iJAEN,sBAAMrB,UAAWC,KAAQ8B,KAAzB,SAAgCnC,EAAKmC,UAEvC,sBAAK/B,UAAWC,KAAQgN,MAAxB,UACE,sBAAMjN,UAAWC,KAAQiN,QAASC,eAAa,SAA/C,SACE,cAAC,IAAD,CAAiB1J,QAASkJ,MAE5B,sBAAM3M,UAAWC,KAAQiN,QAASC,eAAa,SAA/C,SACE,cAAC,IAAD,CAAU1J,QAjCA,WACpBrE,EAASF,EAAaC,eAoCjByG,EACC,qBAAK5F,UAAWC,KAAQ4C,OAAxB,SACE,cAAC,EAAD,CAAQnB,MAAM,OAAOkB,MAAM,cAE3BiD,EAAc6B,OAChB,oBAAI1H,UAAWC,KAAQmN,kBAAvB,SACGvH,EAAcd,KAAI,SAACiE,GAAD,OACjB,cAAC,GAAD,CAEEhG,KAAMgG,EAAa/B,IACnB5B,SC9EUvD,ED8ESkH,EAAaqE,YAAYvL,KC9EpB4F,ED8E0B,GC7EvD5F,EAAK4F,OAASA,EAAS5F,EAAKhB,MAAM,EAAG4G,GAAU,SAAW5F,GD8ErDC,KACEiH,EAAa9B,OAAOD,MAAQrH,EAAKqH,IAC7B+B,EAAa7B,QAAQpF,KACrBiH,EAAa9B,OAAOnF,KAE1BpB,KAAMF,EAAWuI,EAAaqE,YAAY/F,WAAWpG,YARhD8H,EAAa/B,KC5ET,IAACnF,EAAc4F,ODyF9B,sBAAK1H,UAAWC,KAAQqN,MAAxB,UACE,kDACA,cAAC,GAAD,CAAQ7J,QAASkJ,EAAjB,uBAGJ,qBAAK3M,UAAWC,KAAQC,KAAxB,SACE,cAAC,EAAD,SAGJ,cAAC,GAAD,Q,oCElFOqN,GAAY,WAAO,IAAD,IACvBnO,EAAWmG,cACjB,EAA2BC,aAAY,SAACC,GAAD,OAAgBA,EAAMC,QAArDE,EAAR,EAAQA,QAAS4H,EAAjB,EAAiBA,MACXrO,EAAUuN,cAEhB,EAIIe,eAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAOf,OACE,qCACE,uBACE5N,UAAWC,KAAQ+J,KACnBxC,SAAUmG,GAR6B,SAACpH,GAC5CnH,EvBnBuB,SAAC0O,EAAe3O,GACvC,8CAAO,WAAOC,GAAP,SAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMX,EAAUkP,eAE3BtP,IACKyH,KAAK,aAAc4H,GAAQ1H,MAAK,SAAAC,GAC7B,IAAQtH,EAAUsH,EAAIE,KAAdxH,MACR,GAAIA,EAAO,CACPO,aAAa0O,QAAQ,WAAYjP,GAEjCD,EAAaC,GAEb,IAAMkP,EAAiBC,YAAWnP,GAElCK,EAASO,EAAesO,IAExB7O,EAAS,CAAEI,KAAMX,EAAUsP,kBAC3BhP,EAAQO,KAAK,SAGpB8G,OAAM,SAAAjE,GACCA,EAAIoF,UACJvI,EAAS,CAAEI,KAAMX,EAAU2D,YAAa1C,QAASyC,EAAIoF,SAASpB,KAAKlB,UACnEjG,EAAS,CAAEI,KAAMX,EAAUuP,gBAE3BhP,EAAS,CAAEI,KAAMX,EAAUuP,aAActO,QAAS,8CAxB3D,2CAAP,sDuBkBSuO,CAAY9H,EAAMpH,OAQvBmP,YAAU,EAHZ,UAKE,sBAAKtO,UAAWC,KAAQsO,aAAxB,UACE,oCACEvO,UAAWC,KAAQgK,MACnBzK,KAAK,OACLwI,YAAY,SACR0F,EAAS,QAAS,CACpBc,QAAS,CACPvG,MAAO,iCACP5C,QAAS,iBAEXoJ,SAAU,CACRxG,OAAO,EACP5C,QAAS,iCAIf,sBAAMrF,UAAWC,KAAQuN,MAAzB,mBAAiCI,EAAOc,aAAxC,aAAiC,EAAcrJ,aAEjD,sBAAKrF,UAAWC,KAAQsO,aAAxB,UACE,oCACEvO,UAAWC,KAAQgK,MACnBzK,KAAK,WACLwI,YAAY,YACR0F,EAAS,WAAY,CACvBiB,UAAW,CACT1G,MAAO,EACP5C,QAAS,+CAEXoJ,SAAU,CACRxG,OAAO,EACP5C,QAAS,oCAIf,sBAAMrF,UAAWC,KAAQuN,MAAzB,mBAAiCI,EAAOgB,gBAAxC,aAAiC,EAAiBvJ,aAEpD,sBAAKrF,UAAWC,KAAQ4O,gBAAxB,UACE,sBAAM7O,UAAWC,KAAQ6O,SAAzB,iCACA,cAAC,IAAD,CAAM9O,UAAWC,KAAQ8O,SAAU3O,GAAG,YAAtC,wBAIF,cAAC,GAAD,CAAQwF,QAASA,EAASwC,SAAUxC,EAApC,wBAID4H,GAAS,cAAC,GAAD,CAAgBhF,MAAOgF,QCnE1BwB,GAAe,WAAO,IAAD,MAC1B5P,EAAWmG,cACjB,EAA2BC,aAAY,SAACC,GAAD,OAAgBA,EAAMC,QAArDE,EAAR,EAAQA,QAAS4H,EAAjB,EAAiBA,MACXrO,EAAUuN,cAEhB,EAIIe,eAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAOf,OACE,qCACE,uBACE5N,UAAWC,KAAQ+J,KACnBxC,SAAUmG,GAR6B,SAACpH,GAC5CnH,ExBW0B,SAAC0O,EAAe3O,GAC1C,8CAAO,WAAOC,GAAP,SAAAC,EAAA,sDACHD,EAAS,CAAEI,KAAMX,EAAUkP,eAE3BtP,IACKyH,KAAK,gBAAiB4H,GAAQ1H,MAAK,SAAAC,GAChC,IAAQtH,EAAUsH,EAAIE,KAAdxH,MACR,GAAIA,EAAO,CACPO,aAAa0O,QAAQ,WAAYjP,GAEjCD,EAAaC,GAEb,IAAMkP,EAAiBC,YAAWnP,GAElCK,EAASO,EAAesO,IAExB7O,EAAS,CAAEI,KAAMX,EAAUsP,kBAC3BhP,EAAQO,KAAK,SAGpB8G,OAAM,SAAAjE,GACCA,EAAIoF,UACJvI,EAAS,CAAEI,KAAMX,EAAU2D,YAAa1C,QAASyC,EAAIoF,SAASpB,KAAKlB,UACnEjG,EAAS,CAAEI,KAAMX,EAAUuP,gBAE3BhP,EAAS,CAAEI,KAAMX,EAAUuP,aAActO,QAAS,8CAxB3D,2CAAP,sDwBZSmP,CAAe1I,EAAMpH,OAQ1BmP,YAAU,EAHZ,UAKE,sBAAKtO,UAAWC,KAAQsO,aAAxB,UACE,oCACEvO,UAAWC,KAAQgK,MACnBzK,KAAK,OACLwI,YAAY,QACR0F,EAAS,OAAQ,CACnBiB,UAAW,CACT1G,MAAO,EACP5C,QAAS,2CAEXoJ,SAAU,CACRxG,OAAO,EACP5C,QAAS,gCAIf,sBAAMrF,UAAWC,KAAQuN,MAAzB,mBAAiCI,EAAO7L,YAAxC,aAAiC,EAAasD,aAEhD,sBAAKrF,UAAWC,KAAQsO,aAAxB,UACE,oCACEvO,UAAWC,KAAQgK,MACnBzK,KAAK,OACLwI,YAAY,SACR0F,EAAS,QAAS,CACpBc,QAAS,CACPvG,MAAO,iCACP5C,QAAS,iBAEXoJ,SAAU,CACRxG,OAAO,EACP5C,QAAS,iCAIf,sBAAMrF,UAAWC,KAAQuN,MAAzB,mBAAiCI,EAAOc,aAAxC,aAAiC,EAAcrJ,aAEjD,sBAAKrF,UAAWC,KAAQsO,aAAxB,UACE,oCACEvO,UAAWC,KAAQgK,MACnBzK,KAAK,WACLwI,YAAY,YACR0F,EAAS,WAAY,CACvBiB,UAAW,CACT1G,MAAO,EACP5C,QAAS,+CAEXoJ,SAAU,CACRxG,OAAO,EACP5C,QAAS,oCAIf,sBAAMrF,UAAWC,KAAQuN,MAAzB,mBAAiCI,EAAOgB,gBAAxC,aAAiC,EAAiBvJ,aAEpD,sBAAKrF,UAAWC,KAAQ4O,gBAAxB,UACE,sBAAM7O,UAAWC,KAAQ6O,SAAzB,mCACA,cAAC,IAAD,CAAM9O,UAAWC,KAAQ8O,SAAU3O,GAAG,SAAtC,wBAIF,cAAC,GAAD,CAAQwF,QAASA,EAASwC,SAAUxC,EAApC,wBAID4H,GAAS,cAAC,GAAD,CAAgBhF,MAAOgF,Q,SCnGxB0B,G,OAFAC,GAAGvQ,yB,oBCyEHwQ,GAlDQ,WACrB,IAAMhQ,EAAWmG,cACXpG,EAAUuN,cACR2C,EAAa7J,aAAY,SAACC,GAAD,OAAgBA,EAAMC,QAA/C2J,SACA7B,EAAUhI,aAAY,SAACC,GAAD,OAAgBA,EAAMmI,UAA5CJ,MAuBR,OArBAzJ,qBAAU,WACR,IAAMhF,EAAQO,aAAagQ,QAAQ,YACnC,GAAIvQ,EAAO,CACT,IAAMkP,EAAiBC,YAAWnP,GAClCD,EAAaC,GACbK,EAASO,EAAesO,IAEpBA,EAAQsB,KCtCkB,SAACxQ,GAIjC,OAH2BA,EAAQ,IACfgN,KAAKyD,OAAM,IAAIvK,MAAOwK,UAAY,KDqClDC,CAAqBzB,EAAQsB,MAAQnQ,EAASF,EAAaC,IAG/D+P,GAAOS,GAAG,sBAAsB,SAACtK,GAC/BjG,EfN0B,SAACiG,GAC7B,MAAO,CACH7F,KAAMX,EAAU+Q,qBAChB9P,QAASuF,GeGFwK,CAAiBxK,IAC1BjG,EPe2B,SAACiG,GAC9B,MAAO,CACH7F,KAAMX,EAAUiR,kCAChBhQ,QAASuF,GOlBF0K,CAAkB1K,OAG7B6J,GAAOS,GAAG,+BAA+B,SAAC3G,GACxC5J,EPI+B,SAAC4J,GAClC,MAAO,CACHxJ,KAAMX,EAAUmR,+BAChBlQ,QAASkJ,GOPFiH,CAAsBjH,SAEhC,IAGD,sBAAKhJ,UAAWC,KAAQiQ,IAAxB,UACGb,EACC,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,OAAK,EAACnN,KAAK,QAAQoN,UAAW5D,KACrC,cAAC,IAAD,CAAOxJ,KAAK,YAAYoN,UAAWjL,IACnC,cAAC,IAAD,CAAUkL,KAAK,IAAIjQ,GAAG,gBAI1B,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4C,KAAK,SAASoN,UAAW7C,KAChC,cAAC,IAAD,CAAOvK,KAAK,YAAYoN,UAAWpB,KACnC,cAAC,IAAD,CAAUqB,KAAK,IAAIjQ,GAAG,cAGzBoN,GAAS,cAAC,GAAD,CAAgBhF,MAAOgF,Q,2BE5DjC8C,GAA0B,CAC5BjB,UAAU,EACVzJ,SAAS,G,SCHP0K,GAA8B,CAChC3K,SAAU,GACVC,SAAS,GCTA2K,GAAyB,SAACC,GACnC,OAAOA,EAAMC,MAAK,SAACpR,EAAkBqR,GACjC,OAAQ,IAAIzL,KAAK5F,EAAEgO,YAAY/F,YAAc,IAAIrC,KAAKyL,EAAErD,YAAY/F,cACrEqJ,WCMDL,GAAmC,CACrC1K,SAAS,EACTC,cAAe,ICLbyK,GAA4B,GCM5BM,GAAcC,2BAAgB,CAChCnL,KLAuB,WAAuD,IAAtDD,EAAqD,uDAA7C6K,GAAcQ,EAA+B,uCAC7E,OAAQA,EAAOtR,MACX,KAAKX,EAAUkP,aACX,OAAO,6BACAtI,GADP,IAEIG,SAAS,IAEjB,KAAK/G,EAAUsP,gBAKf,KAAKtP,EAAUuP,aACX,OAAO,6BACA3I,GADP,IAEIG,SAAS,IAEjB,KAAK/G,EAAUgB,iBACX,OAAO,6BACA4F,GADP,IAEI7F,KAAMkR,EAAOhR,QACbuP,UAAU,IAElB,KAAKxQ,EAAUY,YACX,OAAO,6BACAgG,GADP,IAEI7F,UAAMmR,EACN1B,UAAU,IAElB,QACI,OAAO5J,IK7BfE,SJF2B,WAA2D,IAA1DF,EAAyD,uDAAjD6K,GAAcQ,EAAmC,uCACrF,OAAQA,EAAOtR,MACX,KAAKX,EAAUoH,iBACX,OAAO,6BACAR,GADP,IAEIG,SAAS,IAEjB,KAAK/G,EAAUyH,yBACX,OAAO,6BACAb,GADP,IAEIG,SAAS,EACTD,SAAUmL,EAAOhR,UAEzB,KAAKjB,EAAUmS,sBACX,OAAO,6BACAvL,GADP,IAEIG,SAAS,IAGjB,KAAK/G,EAAU+Q,qBACX,OAAO,6BACAnK,GADP,IAEIE,SAAS,GAAD,oBAAMF,EAAME,UAAZ,CAAsBmL,EAAOhR,YAE7C,QACI,OAAO2F,IItBfI,cFDgC,WAAgE,IAA/DJ,EAA8D,uDAAtD6K,GAAcQ,EAAwC,uCAC/F,OAAQA,EAAOtR,MACX,KAAKX,EAAU+N,sBACX,OAAO,6BACAnH,GADP,IAEIG,SAAS,IAEjB,KAAK/G,EAAUiO,8BACX,OAAO,6BACArH,GADP,IAEIG,SAAS,EACTC,cAAe0K,GAAuBO,EAAOhR,WAErD,KAAKjB,EAAU+I,2BACX,OAAO,6BACAnC,GADP,IAEIG,SAAS,IAEjB,KAAK/G,EAAUmR,+BACX,OAAO,6BACAvK,GADP,IAEII,cAAc,CAAEiL,EAAOhR,SAAV,oBAAsB2F,EAAMI,kBAEjD,KAAKhH,EAAUiR,kCACX,MAAqEgB,EAAOhR,QAApEmH,EAAR,EAAQA,IAAK+B,EAAb,EAAaA,aAAclH,EAA3B,EAA2BA,KAAMwF,EAAjC,EAAiCA,UAAWD,EAA5C,EAA4CA,UAAW4J,EAAvD,EAAuDA,UACjD5D,EAAwB,CAC1BpG,MACAnF,OACAkH,aAAcA,EAAa/B,IAC3BI,UAAWA,EAAUJ,IACrBK,YACA2J,aAGEC,EAAUzL,EAAMI,cAAcd,KAAI,SAAAiC,GACpC,OAAIA,EAAKC,MAAQ6J,EAAOhR,QAAQkJ,aAAa/B,IAClC,6BAAKD,GAAZ,IAAkBqG,gBAEfrG,KAGX,OAAO,6BACAvB,GADP,IAEII,cAAe0K,GAAuBW,KAE9C,QACI,OAAOzL,IE5CfmI,ODRyB,WAAyD,IAAxDnI,EAAuD,uDAA/C6K,GAAcQ,EAAiC,uCACjF,OAAQA,EAAOtR,MACX,KAAKX,EAAU2D,YACX,OAAO,6BACAiD,GADP,IAEI+H,MAAOsD,EAAOhR,UAEtB,KAAKjB,EAAU6D,aACX,OAAO,6BACA+C,GADP,IAEI+H,WAAOuD,IAEf,QACI,OAAOtL,MCFN0L,GAAQC,uBACjBR,GACAS,+BAAoBC,2BAAgBC,Q,OCdxCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJ5M,SAASmN,eAAe,U,mBCd1BnT,EAAOC,QAAU,CAAC,OAAS,8BAA8B,MAAQ,6BAA6B,qBAAuB,4CAA4C,cAAgB,qCAAqC,kBAAoB,yCAAyC,KAAO,4BAA4B,iBAAmB,wCAAwC,KAAO,4BAA4B,KAAO,4BAA4B,MAAQ,6BAA6B,QAAU,iC,mBCAteD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,MAAQ,qBAAqB,YAAc,2BAA2B,aAAe,4BAA4B,UAAY,yBAAyB,WAAa,0BAA0B,eAAiB,gC,mBCA/QD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,YAAc,iCAAiC,SAAW,8BAA8B,SAAW,8BAA8B,aAAe,kCAAkC,UAAY,+BAA+B,UAAY,iC,mBCA5RD,EAAOC,QAAU,CAAC,OAAS,0BAA0B,WAAa,8BAA8B,eAAiB,kCAAkC,MAAQ,2B,mBCA3JD,EAAOC,QAAU,CAAC,aAAe,uCAAuC,OAAS,iCAAiC,KAAO,+BAA+B,KAAO,+BAA+B,QAAU,kCAAkC,KAAO,iC,mBCAjPD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,iBAAmB,gCAAgC,MAAQ,qBAAqB,UAAY,2B,mBCAzJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,eAAiB,+BAA+B,YAAc,4BAA4B,YAAc,8B,mBCA1JD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,qB,mBCAnDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,yBAAyB,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,wB,mBCAtLD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,OAAS,yB,mBCArFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,KAAO,0BAA0B,SAAW,gC,mBCArGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,KAAO,qBAAqB,SAAW,yBAAyB,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,IAAM,oBAAoB,QAAU,wBAAwB,OAAS,uBAAuB,QAAU,0B,ytMCAxXD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,aAAe,2BAA2B,MAAQ,oBAAoB,gBAAkB,8BAA8B,SAAW,uBAAuB,SAAW,uBAAuB,MAAQ,sB,mBCA9OD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,IAAM,oB","file":"static/js/main.6c99f700.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer\":\"ConversationsDrawer_drawer__2S6W4\",\"openDrawer\":\"ConversationsDrawer_openDrawer__2Tlvy\",\"close\":\"ConversationsDrawer_close__34hqr\",\"searchList\":\"ConversationsDrawer_searchList__2c6an\",\"searchListLoader\":\"ConversationsDrawer_searchListLoader__3Fl2h\",\"searchItem\":\"ConversationsDrawer_searchItem__34ALg\",\"searchName\":\"ConversationsDrawer_searchName__3t1xP\",\"modalForm\":\"ConversationsDrawer_modalForm__h_kg_\",\"searchInfo\":\"ConversationsDrawer_searchInfo__PAMkq\",\"input\":\"ConversationsDrawer_input__2oy3P\",\"name\":\"ConversationsDrawer_name__1fkbE\",\"message\":\"ConversationsDrawer_message__PNKjH\",\"modalButtons\":\"ConversationsDrawer_modalButtons__2hM7c\",\"buttons\":\"ConversationsDrawer_buttons__3HxKi\",\"icon\":\"ConversationsDrawer_icon__jgULI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Chat_loader__2VN1t\",\"chatWrapper\":\"Chat_chatWrapper__3tRuH\",\"chat\":\"Chat_chat__3K6yI\",\"header\":\"Chat_header__221jI\",\"user\":\"Chat_user__3xnUc\",\"text\":\"Chat_text__2UdoS\",\"name\":\"Chat_name__Yyw9I\",\"status\":\"Chat_status__1nBtr\",\"messagesBox\":\"Chat_messagesBox__2bc0N\",\"textForm\":\"Chat_textForm__3reSe\",\"textField\":\"Chat_textField__26krv\",\"icon\":\"Chat_icon__19zw3\",\"sendIcon\":\"Chat_sendIcon__35CdD\"};","import axios from \"axios\";\r\naxios.defaults.baseURL = process.env.REACT_APP_API_KEY || \"\";\r\n\r\nexport const setAuthToken = (token: string) => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n","export enum constants {\r\n    AUTH_REQUEST = 'AUTH/AUTH_REQUEST',\r\n    SUCCESS_REQUEST = 'AUTH/SUCCESS_REQUEST',\r\n    FAIL_REQUEST = 'AUTH/FAIL_REQUEST',\r\n    SET_CURRENT_USER = 'AUTH/SET_CURRENT_USER',\r\n    USER_LOGOUT = 'AUTH/USER_LOGOUT',\r\n    CATCH_ERROR = 'CATCH_ERROR',\r\n    REMOVE_ERROR = 'REMOVE_ERROR',\r\n    CONVERSATIONS_REQUEST = 'CONVERSATIONS/CONVERSATIONS_REQUEST',\r\n    CONVERSATIONS_SUCCESS_REQUEST = 'CONVERSATIONS/SUCCESS_REQUEST',\r\n    CONVERSATIONS_FAIL_REQUEST = 'CONVERSATIONS/FAIL_REQUEST',\r\n    CREATE_CONVERSATION_REQUEST = 'CONVERSATIONS/CREATE_CONVERSATION_REQUEST',\r\n    CREATE_CONVERSATION_SUCCESS_REQUEST = 'CONVERSATIONS/CREATE_CONVERSATION_SUCCESS_REQUEST',\r\n    CREATE_CONVERSATION_FAIL_REQUEST = 'CONVERSATIONS/CREATE_CONVERSATION_FAIL_REQUEST',\r\n    CONVERSATIONS_ADD_CONVERSATION = 'CONVERSATIONS/CONVERSATIONS_ADD_CONVERSATION ',\r\n    CONVERSATIONS_UPDATE_LAST_MESSAGE = 'CONVERSATIONS/CONVERSATIONS_UPDATE_LAST_MESSAGE ',\r\n    MESSAGES_REQUEST = 'MESSAGES/MESSAGES_REQUEST',\r\n    MESSAGES_SUCCESS_REQUEST = 'MESSAGES/SUCCESS_REQUEST',\r\n    MESSAGES_FAIL_REQUEST = 'MESSAGES/FAIL_REQUEST',\r\n    MESSAGES_ADD_MESSAGE = 'MESSAGES/MESSAGE_ADD_MESSAGE',\r\n}","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Dispatch } from \"react\";\r\nimport { IAuth } from \"../../interfaces/IAuth\";\r\nimport { IUser } from \"../../interfaces/IUser\";\r\nimport { setAuthToken } from \"../../core/axios\";\r\nimport { constants } from \"../constants\";\r\nimport { IAction } from \"../store\";\r\n\r\nexport const loginAction = (values: IAuth, history: any) => {\r\n    return async (dispatch: Dispatch<IAction>) => {\r\n        dispatch({ type: constants.AUTH_REQUEST })\r\n\r\n        axios\r\n            .post(\"auth/login\", values).then(res => {\r\n                const { token } = res.data;\r\n                if (token) {\r\n                    localStorage.setItem(\"jwtToken\", token);\r\n\r\n                    setAuthToken(token);\r\n\r\n                    const decoded: IUser = jwt_decode(token);\r\n\r\n                    dispatch(setCurrentUser(decoded))\r\n\r\n                    dispatch({ type: constants.SUCCESS_REQUEST })\r\n                    history.push(\"/\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err.response) {\r\n                    dispatch({ type: constants.CATCH_ERROR, payload: err.response.data.message })\r\n                    dispatch({ type: constants.FAIL_REQUEST })\r\n                } else {\r\n                    dispatch({ type: constants.FAIL_REQUEST, payload: \"No server response. Please try letter.\" })\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const registerAction = (values: IAuth, history: any) => {\r\n    return async (dispatch: Dispatch<IAction>) => {\r\n        dispatch({ type: constants.AUTH_REQUEST })\r\n\r\n        axios\r\n            .post(\"auth/register\", values).then(res => {\r\n                const { token } = res.data;\r\n                if (token) {\r\n                    localStorage.setItem(\"jwtToken\", token);\r\n\r\n                    setAuthToken(token);\r\n\r\n                    const decoded: IUser = jwt_decode(token);\r\n\r\n                    dispatch(setCurrentUser(decoded))\r\n\r\n                    dispatch({ type: constants.SUCCESS_REQUEST })\r\n                    history.push(\"/\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err.response) {\r\n                    dispatch({ type: constants.CATCH_ERROR, payload: err.response.data.message })\r\n                    dispatch({ type: constants.FAIL_REQUEST })\r\n                } else {\r\n                    dispatch({ type: constants.FAIL_REQUEST, payload: \"No server response. Please try letter.\" })\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const logoutAction = (history: any) => {\r\n    return async (dispatch: Dispatch<IAction>) => {\r\n        localStorage.removeItem(\"jwtToken\")\r\n        dispatch({ type: constants.USER_LOGOUT })\r\n        history.push(\"/login\")\r\n    };\r\n};\r\n\r\nexport const setCurrentUser = (user: IUser) => {\r\n    return {\r\n        type: constants.SET_CURRENT_USER,\r\n        payload: user\r\n    };\r\n};\r\n","import { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { IoLogoXing } from \"react-icons/io5\";\r\n\r\nimport classes from \"./Logo.module.css\";\r\n\r\nexport const Logo: FC = () => {\r\n  return (\r\n    <div className={classes.logo}>\r\n      <NavLink className={classes.link} to=\"/\">\r\n        <IoLogoXing className={classes.icon} />\r\n        Nolanger\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Logo } from \"../Logo\";\r\n\r\nimport classes from \"./Navbar.module.css\";\r\n\r\nexport const Navbar: FC = () => {\r\n  return (\r\n    <header className={classes.navbar}>\r\n      <div className={`${classes.navbarInner} container`}>\r\n        <Logo />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","export const formatDate = (date: string) => {\r\n    const time = date.split(\"T\")[0];\r\n    const day = time.slice(8, 10);\r\n    const month = time.slice(5, 7);\r\n    const year = time.slice(0, 4);\r\n    const hours = date.split(\"T\")[1].slice(0, 5);\r\n\r\n    return {\r\n        fullDate() {\r\n            return `${day}.${month}.${year} at ${hours}`;\r\n        },\r\n        timeOnly() {\r\n            return hours;\r\n        }\r\n    }\r\n};","import { FC } from \"react\";\r\nimport classes from \"./Avatar.module.css\";\r\n\r\ninterface AvatarProps {\r\n  src: string;\r\n  size: string;\r\n}\r\n\r\nexport const Avatar: FC<AvatarProps> = ({ src, size }) => {\r\n  return (\r\n    <img\r\n      className={classes.avatar}\r\n      src={src}\r\n      alt=\"avatar\"\r\n      style={{ width: size, height: size }}\r\n    />\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { formatDate } from \"../../utils/formatDate\";\r\nimport { Avatar } from \"../Avatar\";\r\nimport classes from \"./MessageItem.module.css\";\r\n\r\ninterface IMessageItem {\r\n  mine: boolean;\r\n  text: string;\r\n  avatar: string;\r\n  name: string;\r\n  time: string;\r\n}\r\n\r\nexport const MessageItem: FC<IMessageItem> = ({\r\n  mine,\r\n  text,\r\n  avatar,\r\n  name,\r\n  time,\r\n}) => {\r\n  return (\r\n    <li className={mine ? classes.rightMessage : classes.leftMessage}>\r\n      <div className={classes.user}>\r\n        <Avatar src={avatar} size=\"55px\" />\r\n        <span>{name}</span>\r\n      </div>\r\n      <p className={mine ? classes.rightText : classes.leftText}>\r\n        {text}\r\n        <span className={mine ? classes.rightTime : classes.leftTime}>\r\n          {formatDate(time).timeOnly()}\r\n        </span>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n","import { IError } from \"../../interfaces/IError\";\r\nimport { constants } from \"../constants\";\r\n\r\nexport const catchErrorAction = (err: IError) => {\r\n    return {\r\n        type: constants.CATCH_ERROR,\r\n        payload: err\r\n    }\r\n};\r\n\r\nexport const removeErrorAction = () => {\r\n    return {\r\n        type: constants.REMOVE_ERROR\r\n    }\r\n};","import { FC } from \"react\";\r\nimport classes from \"./Loader.module.css\";\r\n\r\ninterface LoaderProps {\r\n  width: string;\r\n  color: string;\r\n}\r\n\r\nexport const Loader: FC<LoaderProps> = ({ width, color }) => {\r\n  return (\r\n    <div className={classes.loader} style={{ width: width }}>\r\n      <svg className={classes.circular} viewBox=\"25 25 50 50\">\r\n        <circle\r\n          className={classes.path}\r\n          cx=\"50\"\r\n          cy=\"50\"\r\n          r=\"20\"\r\n          fill=\"none\"\r\n          strokeWidth=\"4\"\r\n          strokeMiterlimit=\"10\"\r\n          stroke={color}\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  FC,\r\n  MouseEventHandler,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport emojis from \"../../emoji.json\";\r\nimport { outsideClick } from \"../../utils/outsideClick\";\r\n\r\nimport classes from \"./EmojiMenu.module.css\";\r\n\r\ninterface IEmojiMenu {\r\n  onClick: (e: SyntheticEvent) => void;\r\n}\r\n\r\nexport const EmojiMenu: FC<IEmojiMenu> = ({ onClick }) => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const menuRef = useRef<HTMLUListElement>(null);\r\n\r\n  const openEmojisHandler = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  useEffect(() => {\r\n    outsideClick(menuRef, setOpen);\r\n  }, [menuRef]);\r\n  \r\n  return (\r\n    <div className={classes.emojis}>\r\n      <span className={classes.emoji} onClick={openEmojisHandler}>\r\n        {emojis[0].unicode}\r\n      </span>\r\n      <ul\r\n        ref={menuRef}\r\n        className={\r\n          open\r\n            ? classes.emojisList\r\n            : `${classes.emojisList} ${classes.emojisListHide}`\r\n        }\r\n      >\r\n        {emojis.map((emoji, i) => (\r\n          <li key={i + Date.now()} className={classes.emoji} onClick={onClick}>\r\n            {emoji.unicode}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","export const outsideClick = (ref: any, cb: (b: boolean) => void) => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n        if (ref.current && !ref.current.contains(e.target as Node)) {\r\n            cb(false);\r\n        }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n}","import { ChangeEvent, FC, FormEvent, useEffect, useRef, useState } from \"react\";\r\nimport { AiOutlineSend, AiOutlinePaperClip } from \"react-icons/ai\";\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\r\nimport { HiOutlineArrowLeft } from \"react-icons/hi\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { MessageItem } from \"../../components/MessageItem\";\r\nimport { Avatar } from \"../../components/Avatar\";\r\nimport { createAction, getAllAction } from \"../../redux/actions/messages\";\r\nimport { IMessage } from \"../../interfaces/IMessage\";\r\nimport { Loader } from \"../../components/Loader\";\r\n\r\nimport classes from \"./Chat.module.css\";\r\nimport { IConversation } from \"../../interfaces/IConversation\";\r\nimport { EmojiMenu } from \"../../containers/EmojiMenu\";\r\n\r\nexport const Chat: FC = () => {\r\n  const bottomRef = useRef<HTMLUListElement>(null);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const dispatch = useDispatch<Dispatch<any>>();\r\n  const { user } = useSelector((state: any) => state.auth);\r\n  const { messages, loading } = useSelector((state: any) => state.messages);\r\n  const { conversations } = useSelector((state: any) => state.conversations);\r\n  const { id } = useParams<{ id: string }>();\r\n  const [status, setStatus] = useState<string>(\"Offline\");\r\n\r\n  const inputChangeHandler = (e: ChangeEvent<any>) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const sendMessageHandler = (e: FormEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    message.length !== 0 && dispatch(createAction(user._id, id, message));\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const addEmojiHandler = (e: any) => {\r\n    setMessage(message + e.target.innerHTML);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllAction(id));\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (bottomRef.current) {\r\n      bottomRef.current.scrollTo(0, 999999);\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className={`${classes.chatWrapper} container`}>\r\n      {loading ? (\r\n        <div className={classes.loader}>\r\n          <Loader width=\"60px\" color=\"#fd4d4d\" />\r\n        </div>\r\n      ) : (\r\n        <div className={classes.chat}>\r\n          <div className={classes.header}>\r\n            <Link to=\"/chat\">\r\n              <HiOutlineArrowLeft className={classes.icon} />\r\n            </Link>\r\n            <div className={classes.user}>\r\n              <Avatar\r\n                src=\"https://st4.depositphotos.com/4329009/19956/v/600/depositphotos_199564354-stock-illustration-creative-vector-illustration-default-avatar.jpg\"\r\n                size=\"66px\"\r\n              />\r\n              <div className={classes.text}>\r\n                <p className={classes.name}>\r\n                  {conversations.map((item: IConversation) => {\r\n                    if (item._id === id) {\r\n                      return item.author._id === user._id\r\n                        ? item.partner.name\r\n                        : item.author.name;\r\n                    }\r\n                  })}\r\n                </p>\r\n                <span className={classes.status}>{status}</span>\r\n              </div>\r\n            </div>\r\n            <button className={classes.icon}>\r\n              <BiDotsVerticalRounded />\r\n            </button>\r\n          </div>\r\n          <ul className={classes.messagesBox} ref={bottomRef}>\r\n            {messages.map((message: IMessage) => (\r\n              <MessageItem\r\n                key={message._id}\r\n                mine={user._id === message.createdBy._id}\r\n                avatar=\"https://images.unsplash.com/photo-1556103255-4443dbae8e5a?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGhvdG9ncmFwaGVyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80\"\r\n                name={message.createdBy.name}\r\n                text={message.text}\r\n                time={message.createdAt}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <form className={classes.textForm} onSubmit={sendMessageHandler}>\r\n            <button className={classes.icon}>\r\n              <AiOutlinePaperClip />\r\n            </button>\r\n            <EmojiMenu onClick={addEmojiHandler} />\r\n            <input\r\n              className={classes.textField}\r\n              type=\"text\"\r\n              placeholder=\"Message...\"\r\n              value={message}\r\n              onChange={inputChangeHandler}\r\n            />\r\n            <button\r\n              className={`${classes.icon} ${classes.sendIcon}`}\r\n              disabled={message.length === 0}\r\n            >\r\n              <AiOutlineSend />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { IMessage } from \"../../interfaces/IMessage\";\r\nimport { constants } from \"../constants\";\r\nimport { IAction } from \"../store\";\r\nimport { catchErrorAction } from \"./errors\";\r\n\r\nexport const getAllAction = (id: string) => {\r\n    return async (dispatch: Dispatch<IAction>) => {\r\n        dispatch({ type: constants.MESSAGES_REQUEST })\r\n\r\n        axios\r\n            .post(\"message/getAll\", { conversationId: id }).then(res => {\r\n                dispatch({ type: constants.MESSAGES_SUCCESS_REQUEST, payload: res.data })\r\n            })\r\n            .catch(err =>\r\n                console.log(err)\r\n            );\r\n    };\r\n};\r\n\r\nexport const createAction = (id: string, conversationId: string, message: string) => {\r\n    return async (dispatch: Dispatch<IAction>) => {\r\n        axios\r\n            .post(\"message/create\", { text: message, conversationId, id })\r\n            .catch(err => {\r\n                if (err.response) {\r\n                    dispatch(catchErrorAction(err.response.data.message))\r\n                    dispatch({ type: constants.CONVERSATIONS_FAIL_REQUEST })\r\n                } else {\r\n                    dispatch({ type: constants.CATCH_ERROR, payload: \"No server response. Please try letter.\" })\r\n                    dispatch({ type: constants.CONVERSATIONS_FAIL_REQUEST })\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const addMessageAction = (message: IMessage) => {\r\n    return {\r\n        type: constants.MESSAGES_ADD_MESSAGE,\r\n        payload: message\r\n    }\r\n}","import { useEffect } from \"react\";\r\nimport { FC, ReactNode } from \"react\";\r\nimport { MdErrorOutline, MdClose } from \"react-icons/md\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { removeErrorAction } from \"../../redux/actions/errors\";\r\n\r\nimport classes from \"./Toast.module.css\";\r\n\r\nexport interface IToast {\r\n  children?: ReactNode;\r\n  message?: string;\r\n  type?: string;\r\n  removeErrorHandler?: () => void;\r\n}\r\n\r\nexport const Toast: FC<IToast> = ({ children }) => {\r\n  const dispatch = useDispatch<Dispatch<any>>();\r\n\r\n  const removeErrorHandler = () => {\r\n    dispatch(removeErrorAction());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(removeErrorAction());\r\n    }, 4000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.toast}>\r\n      <span className={classes.toastIcon}>\r\n        <MdErrorOutline />\r\n      </span>\r\n      <div className={classes.toastContent}>{children}</div>\r\n      <button className={classes.toastClose} onClick={removeErrorHandler}>\r\n        <MdClose className={classes.toastCloseIcon} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { IToast, Toast } from \"./Toast\";\r\n\r\nimport classes from \"./Toast.module.css\";\r\n\r\ninterface ToastContainerProps {\r\n  toast: IToast;\r\n}\r\n\r\nexport const ToastContainer: FC<ToastContainerProps> = ({ toast }) => {\r\n  return (\r\n    <div className={classes.toastContainer}>\r\n      <Toast>{toast}</Toast>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Avatar } from \"../Avatar\";\r\nimport classes from \"./ConversationItem.module.css\";\r\n\r\ninterface IConversationItem {\r\n  path: string;\r\n  message: string;\r\n  name: string;\r\n  time: string;\r\n}\r\n\r\nexport const ConversationItem: FC<IConversationItem> = ({\r\n  path,\r\n  message,\r\n  name,\r\n  time,\r\n}) => {\r\n  return (\r\n    <NavLink\r\n      className={classes.conversation}\r\n      to={\"/chat/\" + path}\r\n      activeClassName={classes.active}\r\n    >\r\n      <Avatar\r\n        src={\r\n          \"https://st4.depositphotos.com/4329009/19956/v/600/depositphotos_199564354-stock-illustration-creative-vector-illustration-default-avatar.jpg\"\r\n        }\r\n        size=\"46px\"\r\n      />\r\n      <div className={classes.text}>\r\n        <p className={classes.name}>{name}</p>\r\n        <p className={classes.message}>{message}</p>\r\n      </div>\r\n      <span className={classes.time}>{time}</span>\r\n    </NavLink>\r\n  );\r\n};\r\n","import { FC, ReactNode } from \"react\";\r\nimport { Loader } from \"../Loader\";\r\nimport classes from \"./Button.module.css\";\r\n\r\ninterface ButtonProps {\r\n  children: ReactNode;\r\n  onClick?: () => void;\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n}\r\n\r\nexport const Button: FC<ButtonProps> = ({\r\n  children,\r\n  onClick,\r\n  disabled,\r\n  loading,\r\n}) => {\r\n  return (\r\n    <button className={classes.button} disabled={disabled} onClick={onClick}>\r\n      {children}\r\n      <div\r\n        className={\r\n          loading\r\n            ? `${classes.loadingWrapper} ${classes.showLoading}`\r\n            : `${classes.loadingWrapper} ${classes.hideLoading}`\r\n        }\r\n      >\r\n        <Loader width=\"24px\" color=\"#fff\" />\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n","import { FC, ReactNode } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\ninterface ModalProps {\r\n  children: ReactNode;\r\n  state: boolean;\r\n  close: () => void;\r\n}\r\n\r\nexport const Modal: FC<ModalProps> = ({ children, state, close }) => {\r\n  return (\r\n    <div\r\n      className={\r\n        state\r\n          ? classes.modalWrapper\r\n          : `${classes.modalWrapper} ${classes.modalWrapperHide}`\r\n      }\r\n      onClick={close}\r\n    >\r\n      <div\r\n        className={\r\n          state ? classes.modal : `${classes.modal} ${classes.modalHide}`\r\n        }\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { ChangeEvent, FC, SyntheticEvent } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nimport classes from \"./Search.module.css\";\r\n\r\ninterface SearchProps {\r\n  onSubmit: (e: SyntheticEvent) => void;\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  disabled: boolean;\r\n}\r\n\r\nexport const Search: FC<SearchProps> = ({ onSubmit, onChange, disabled }) => {\r\n  return (\r\n    <form className={classes.form} onSubmit={onSubmit}>\r\n      <input\r\n        className={classes.input}\r\n        placeholder=\"Search...\"\r\n        onChange={onChange}\r\n      />\r\n      <button className={classes.button} disabled={disabled}>\r\n        <AiOutlineSearch />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { ChangeEvent, FC, SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { HiOutlineArrowLeft } from \"react-icons/hi\";\r\nimport { AiOutlineMessage } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { IUser } from \"../../interfaces/IUser\";\r\nimport { createConversationAction } from \"../../redux/actions/conversations\";\r\nimport { catchErrorAction } from \"../../redux/actions/errors\";\r\nimport { Button } from \"../Button\";\r\nimport { Loader } from \"../Loader\";\r\nimport { Modal } from \"../Modal\";\r\nimport { Search } from \"../Search\";\r\n\r\nimport classes from \"./ConversationsDrawer.module.css\";\r\n\r\ninterface DrawerProps {\r\n  state: boolean;\r\n  close: () => void;\r\n}\r\n\r\nexport const ConversationsDrawer: FC<DrawerProps> = ({ state, close }) => {\r\n  const dispatch = useDispatch<Dispatch<any>>();\r\n  const { user } = useSelector((state: any) => state.auth);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const [modalUser, setModalUser] = useState<IUser>();\r\n  const [searchResults, setSearchResults] = useState<IUser[]>([]);\r\n  const [searchLength, setSearchLength] = useState<number>(0);\r\n  const [searchText, setSearchText] = useState<string>(\"\");\r\n  const [messageText, setMessageText] = useState<string>(\"\");\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit] = useState<number>(10);\r\n\r\n  const openModalHandler = (user: IUser) => {\r\n    setModalUser(user);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const messageChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setMessageText(e.target.value);\r\n  };\r\n\r\n  const createConversationHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (modalUser) {\r\n      dispatch(createConversationAction(user._id, modalUser._id, messageText));\r\n    }\r\n    setOpenModal(false);\r\n    setMessageText(\"\");\r\n  };\r\n\r\n  const searchChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const searchUsers = (page: number) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`/users?search=${searchText}&page=${page}&limit=${limit}`)\r\n      .then((result) => {\r\n        setSearchResults(result.data.users);\r\n        setSearchLength(result.data.count);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        dispatch(catchErrorAction(err.response.data.message));\r\n        setSearchResults([]);\r\n        setPage(0);\r\n      });\r\n  };\r\n\r\n  const prevPageHandler = () => {\r\n    setPage(page - 1);\r\n  };\r\n\r\n  const nextPageHandler = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  const searchSubmitHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    searchUsers(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchText.length && searchUsers(page);\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          state ? classes.drawer : `${classes.drawer} ${classes.openDrawer}`\r\n        }\r\n      >\r\n        <button className={classes.close} onClick={close}>\r\n          <HiOutlineArrowLeft />\r\n        </button>\r\n        <Search\r\n          onSubmit={searchSubmitHandler}\r\n          onChange={searchChangeHandler}\r\n          disabled={searchText.length === 0 || loading}\r\n        />\r\n        {loading ? (\r\n          <div className={classes.searchListLoader}>\r\n            <Loader width=\"60px\" color=\"#fd4d4d\" />\r\n          </div>\r\n        ) : (\r\n          <ul className={classes.searchList}>\r\n            {searchResults.map((user: IUser) => (\r\n              <li className={classes.searchItem} key={user._id}>\r\n                <span className={classes.searchName}>{user.name}</span>\r\n                <Button onClick={() => openModalHandler(user)}>\r\n                  <AiOutlineMessage className={classes.icon} />\r\n                </Button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {searchResults.length !== 0 && (\r\n          <>\r\n            <div className={classes.buttons}>\r\n              <Button\r\n                onClick={prevPageHandler}\r\n                disabled={page === 0 || loading}\r\n              >\r\n                Prev\r\n              </Button>\r\n              <Button\r\n                onClick={nextPageHandler}\r\n                disabled={\r\n                  Math.ceil(searchLength / limit) === page + 1 || loading\r\n                }\r\n              >\r\n                Next\r\n              </Button>\r\n            </div>\r\n            <div className={classes.searchInfo}>\r\n              <span>\r\n                page: {page + 1 + \"/\" + Math.ceil(searchLength / limit)}\r\n              </span>\r\n              <span>|</span>\r\n              <span>results: {searchLength}</span>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <Modal state={openModal} close={closeModalHandler}>\r\n        <h2>Create message</h2>\r\n        <form\r\n          className={classes.modalForm}\r\n          onSubmit={createConversationHandler}\r\n        >\r\n          <input\r\n            className={`${classes.input} ${classes.name}`}\r\n            value={modalUser?.name || \"\"}\r\n            disabled\r\n          />\r\n          <textarea\r\n            className={`${classes.input} ${classes.message}`}\r\n            placeholder=\"Message...\"\r\n            onChange={messageChangeHandler}\r\n            value={messageText}\r\n          />\r\n          <div className={classes.modalButtons}>\r\n            <Button>Send</Button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { IConversation } from \"../../interfaces/IConversation\";\r\nimport { IMessage } from \"../../interfaces/IMessage\";\r\nimport { constants } from \"../constants\";\r\nimport { IAction } from \"../store\";\r\nimport { catchErrorAction } from \"./errors\";\r\n\r\nexport const getAllAction = () => {\r\n    return async (dispatch: Dispatch<IAction>) => {\r\n        dispatch({ type: constants.CONVERSATIONS_REQUEST })\r\n\r\n        axios\r\n            .get(\"conversation/getAll\").then(res => {\r\n                dispatch({ type: constants.CONVERSATIONS_SUCCESS_REQUEST, payload: res.data })\r\n            })\r\n            .catch(err => {\r\n                if (err.response) {\r\n                    dispatch(catchErrorAction(err.response.data.message))\r\n                    dispatch({ type: constants.CONVERSATIONS_FAIL_REQUEST })\r\n                } else {\r\n                    dispatch({ type: constants.CATCH_ERROR, payload: \"No server response. Please try letter.\" })\r\n                    dispatch({ type: constants.CONVERSATIONS_FAIL_REQUEST })\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const createConversationAction = (author: string, partner: string, message: string) => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        dispatch({ type: constants.CREATE_CONVERSATION_REQUEST })\r\n\r\n        const data = {\r\n            author,\r\n            partner,\r\n            message,\r\n        }\r\n\r\n        axios\r\n            .post(\"conversation/create\", data)\r\n            .catch(err => {\r\n                if (err.response) {\r\n                    dispatch(catchErrorAction(err.response.data.message))\r\n                    dispatch({ type: constants.CONVERSATIONS_FAIL_REQUEST })\r\n                } else {\r\n                    dispatch({ type: constants.CATCH_ERROR, payload: \"No server response. Please try letter.\" })\r\n                    dispatch({ type: constants.CONVERSATIONS_FAIL_REQUEST })\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const addConversationAction = (conversation: IConversation) => {\r\n    return {\r\n        type: constants.CONVERSATIONS_ADD_CONVERSATION,\r\n        payload: conversation\r\n    }\r\n}\r\n\r\nexport const updateLastMessage = (message: IMessage) => {\r\n    return {\r\n        type: constants.CONVERSATIONS_UPDATE_LAST_MESSAGE,\r\n        payload: message\r\n    }\r\n}","import { FC } from \"react\";\r\nimport { IoLogoXing } from \"react-icons/io5\";\r\n\r\nimport classes from \"./ChatStarter.module.css\";\r\n\r\nexport const ChatStarter: FC = () => {\r\n  return (\r\n    <div className={classes.starter}>\r\n      <IoLogoXing className={classes.icon} />\r\n      <h1>Welcome!</h1>\r\n      <h3 className={classes.subtitle}>Open conversation to see messages.</h3>\r\n    </div>\r\n  );\r\n};\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { BiLogOut } from \"react-icons/bi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { IConversation } from \"../../interfaces/IConversation\";\r\nimport { getAllAction } from \"../../redux/actions/conversations\";\r\nimport { ConversationItem } from \"../../components/ConversationItem\";\r\nimport { Logo } from \"../../components/Logo\";\r\nimport { logoutAction } from \"../../redux/actions/auth\";\r\n\r\nimport classes from \"./Conversations.module.css\";\r\nimport { ConversationsDrawer } from \"../../components/ConversationsDrawer\";\r\nimport { sliceText } from \"../../utils/sliceText\";\r\nimport { Avatar } from \"../../components/Avatar\";\r\nimport { Loader } from \"../../components/Loader\";\r\nimport { formatDate } from \"../../utils/formatDate\";\r\nimport { ChatStarter } from \"../../components/ChatStarter\";\r\nimport { Button } from \"../../components/Button\";\r\n\r\nexport const Conversations: FC = () => {\r\n  const [openDrawer, setOpenDrawer] = useState<boolean>(false);\r\n  const dispatch = useDispatch<Dispatch<any>>();\r\n  const { user } = useSelector((state: any) => state.auth);\r\n  const { conversations, loading } = useSelector(\r\n    (state: any) => state.conversations\r\n  );\r\n  const history = useHistory();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logoutAction(history));\r\n  };\r\n\r\n  const openDrawerHandler = () => {\r\n    setOpenDrawer(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setOpenDrawer(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllAction());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`${classes.conversationsWrapper} container`}>\r\n      <div className={classes.conversations}>\r\n        <ConversationsDrawer state={openDrawer} close={closeDrawerHandler} />\r\n        <div className={classes.conversationInfo}>\r\n          <div className={classes.text}>\r\n            <Avatar\r\n              size=\"46px\"\r\n              src=\"https://st4.depositphotos.com/4329009/19956/v/600/depositphotos_199564354-stock-illustration-creative-vector-illustration-default-avatar.jpg\"\r\n            />\r\n            <span className={classes.name}>{user.name}</span>\r\n          </div>\r\n          <div className={classes.icons}>\r\n            <span className={classes.tooltip} data-tooltip=\"Search\">\r\n              <AiOutlineSearch onClick={openDrawerHandler} />\r\n            </span>\r\n            <span className={classes.tooltip} data-tooltip=\"Logout\">\r\n              <BiLogOut onClick={logoutHandler} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {loading ? (\r\n          <div className={classes.loader}>\r\n            <Loader width=\"60px\" color=\"#fd4d4d\" />\r\n          </div>\r\n        ) : conversations.length ? (\r\n          <ul className={classes.conversationsList}>\r\n            {conversations.map((conversation: IConversation) => (\r\n              <ConversationItem\r\n                key={conversation._id}\r\n                path={conversation._id}\r\n                message={sliceText(conversation.lastMessage.text, 24)}\r\n                name={\r\n                  conversation.author._id === user._id\r\n                    ? conversation.partner.name\r\n                    : conversation.author.name\r\n                }\r\n                time={formatDate(conversation.lastMessage.createdAt).fullDate()}\r\n              />\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className={classes.empty}>\r\n            <h2>No conversations</h2>\r\n            <Button onClick={openDrawerHandler}>Search</Button>\r\n          </div>\r\n        )}\r\n        <div className={classes.logo}>\r\n          <Logo />\r\n        </div>\r\n      </div>\r\n      <ChatStarter />\r\n    </div>\r\n  );\r\n};\r\n","export const sliceText = (text: string, length: number) => {\r\n    return text.length > length ? text.slice(0, length) + \" . . .\" : text\r\n}","import { Dispatch, FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\n\r\nimport { Button } from \"../../components/Button\";\r\nimport { loginAction } from \"../../redux/actions/auth\";\r\n\r\nimport classes from \"./Auth.module.css\";\r\nimport { ToastContainer } from \"../../containers/Toast/ToastContainer\";\r\n\r\ninterface IFormInputs {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login: FC = () => {\r\n  const dispatch = useDispatch<Dispatch<any>>();\r\n  const { loading, error } = useSelector((state: any) => state.auth);\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IFormInputs>();\r\n\r\n  const onSubmit: SubmitHandler<IFormInputs> = (data) => {\r\n    dispatch(loginAction(data, history));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className={classes.form}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        noValidate\r\n      >\r\n        <div className={classes.inputWrapper}>\r\n          <input\r\n            className={classes.input}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            {...register(\"email\", {\r\n              pattern: {\r\n                value: /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                message: \"Invalid email\",\r\n              },\r\n              required: {\r\n                value: true,\r\n                message: \"You must enter your email\",\r\n              },\r\n            })}\r\n          />\r\n          <span className={classes.error}>{errors.email?.message}</span>\r\n        </div>\r\n        <div className={classes.inputWrapper}>\r\n          <input\r\n            className={classes.input}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            {...register(\"password\", {\r\n              minLength: {\r\n                value: 6,\r\n                message: \"Your password must be at least 6 characters\",\r\n              },\r\n              required: {\r\n                value: true,\r\n                message: \"You must enter your password\",\r\n              },\r\n            })}\r\n          />\r\n          <span className={classes.error}>{errors.password?.message}</span>\r\n        </div>\r\n        <div className={classes.formLinkWrapper}>\r\n          <span className={classes.formSpan}>Don't have account?</span>\r\n          <Link className={classes.formLink} to=\"/register\">\r\n            Sign up\r\n          </Link>\r\n        </div>\r\n        <Button loading={loading} disabled={loading}>\r\n          Sign in\r\n        </Button>\r\n      </form>\r\n      {error && <ToastContainer toast={error} />}\r\n    </>\r\n  );\r\n};\r\n","import { Dispatch, FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\n\r\nimport { Button } from \"../../components/Button\";\r\nimport { registerAction } from \"../../redux/actions/auth\";\r\n\r\nimport classes from \"./Auth.module.css\";\r\nimport { ToastContainer } from \"../../containers/Toast/ToastContainer\";\r\n\r\ninterface IFormInputs {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Register: FC = () => {\r\n  const dispatch = useDispatch<Dispatch<any>>();\r\n  const { loading, error } = useSelector((state: any) => state.auth);\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IFormInputs>();\r\n\r\n  const onSubmit: SubmitHandler<IFormInputs> = (data) => {\r\n    dispatch(registerAction(data, history));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className={classes.form}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        noValidate\r\n      >\r\n        <div className={classes.inputWrapper}>\r\n          <input\r\n            className={classes.input}\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            {...register(\"name\", {\r\n              minLength: {\r\n                value: 2,\r\n                message: \"Your name must be at least 2 characters\",\r\n              },\r\n              required: {\r\n                value: true,\r\n                message: \"You must enter your name\",\r\n              },\r\n            })}\r\n          />\r\n          <span className={classes.error}>{errors.name?.message}</span>\r\n        </div>\r\n        <div className={classes.inputWrapper}>\r\n          <input\r\n            className={classes.input}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            {...register(\"email\", {\r\n              pattern: {\r\n                value: /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                message: \"Invalid email\",\r\n              },\r\n              required: {\r\n                value: true,\r\n                message: \"You must enter your email\",\r\n              },\r\n            })}\r\n          />\r\n          <span className={classes.error}>{errors.email?.message}</span>\r\n        </div>\r\n        <div className={classes.inputWrapper}>\r\n          <input\r\n            className={classes.input}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            {...register(\"password\", {\r\n              minLength: {\r\n                value: 6,\r\n                message: \"Your password must be at least 6 characters\",\r\n              },\r\n              required: {\r\n                value: true,\r\n                message: \"You must enter your password\",\r\n              },\r\n            })}\r\n          />\r\n          <span className={classes.error}>{errors.password?.message}</span>\r\n        </div>\r\n        <div className={classes.formLinkWrapper}>\r\n          <span className={classes.formSpan}>Already have account?</span>\r\n          <Link className={classes.formLink} to=\"/login\">\r\n            Sign in\r\n          </Link>\r\n        </div>\r\n        <Button loading={loading} disabled={loading}>\r\n          Sign up\r\n        </Button>\r\n      </form>\r\n      {error && <ToastContainer toast={error} />}\r\n    </>\r\n  );\r\n};\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io(process.env.REACT_APP_API_KEY || \"\");\r\n\r\nexport default socket;","import { FC, useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { logoutAction, setCurrentUser } from \"./redux/actions/auth\";\r\nimport { IUser } from \"./interfaces/IUser\";\r\nimport { Navbar } from \"./components/Navbar\";\r\nimport { Chat } from \"./pages/Chat\";\r\nimport { setAuthToken } from \"./core/axios\";\r\nimport { isAccessTokenExpired } from \"./utils/isAccessTokenExpired\";\r\nimport { ToastContainer } from \"./containers/Toast/ToastContainer\";\r\nimport { Conversations } from \"./pages/Conversations\";\r\nimport { Login } from \"./pages/auth/Login\";\r\nimport { Register } from \"./pages/auth/Register\";\r\nimport socket from \"./core/socket\";\r\nimport { addMessageAction } from \"./redux/actions/messages\";\r\nimport {\r\n  addConversationAction,\r\n  updateLastMessage,\r\n} from \"./redux/actions/conversations\";\r\n\r\nimport classes from \"./assets/styles/App.module.css\";\r\n\r\nexport const App: FC = () => {\r\n  const dispatch = useDispatch<Dispatch<any>>();\r\n  const history = useHistory();\r\n  const { loggedIn } = useSelector((state: any) => state.auth);\r\n  const { error } = useSelector((state: any) => state.errors);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"jwtToken\");\r\n    if (token) {\r\n      const decoded: IUser = jwt_decode(token);\r\n      setAuthToken(token);\r\n      dispatch(setCurrentUser(decoded));\r\n\r\n      if (decoded.exp) {\r\n        isAccessTokenExpired(decoded.exp) && dispatch(logoutAction(history));\r\n      }\r\n    }\r\n    socket.on(\"SERVER:NEW_MESSAGE\", (message) => {\r\n      dispatch(addMessageAction(message));\r\n      dispatch(updateLastMessage(message));\r\n    });\r\n\r\n    socket.on(\"SERVER:CONVERSATION_CREATED\", (conversation) => {\r\n      dispatch(addConversationAction(conversation));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n      {loggedIn ? (\r\n        <>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/chat\" component={Conversations} />\r\n            <Route path=\"/chat/:id\" component={Chat} />\r\n            <Redirect from=\"*\" to=\"/chat\" />\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Redirect from=\"*\" to=\"/login\" />\r\n        </Switch>\r\n      )}\r\n      {error && <ToastContainer toast={error} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const isAccessTokenExpired = (token: number) => {\r\n    const accessTokenExpDate = token - 10;\r\n    const currentTime = Math.floor(new Date().getTime() / 1000);\r\n\r\n    return accessTokenExpDate <= currentTime;\r\n};","import { IUser } from \"../../interfaces/IUser\";\r\nimport { constants } from \"../constants\";\r\nimport { IAction } from \"../store\";\r\n\r\ninterface AuthState {\r\n    user?: IUser,\r\n    loggedIn: boolean,\r\n    loading: boolean\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    loggedIn: false,\r\n    loading: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action: IAction): AuthState => {\r\n    switch (action.type) {\r\n        case constants.AUTH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case constants.SUCCESS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case constants.FAIL_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n        case constants.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loggedIn: true\r\n            };\r\n        case constants.USER_LOGOUT:\r\n            return {\r\n                ...state,\r\n                user: undefined,\r\n                loggedIn: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { IMessage } from \"../../interfaces/IMessage\";\r\nimport { constants } from \"../constants\";\r\nimport { IAction } from \"../store\";\r\n\r\ninterface MessagesState {\r\n    messages: IMessage[],\r\n    loading: boolean\r\n}\r\n\r\nconst initialState: MessagesState = {\r\n    messages: [],\r\n    loading: true,\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action: IAction): MessagesState => {\r\n    switch (action.type) {\r\n        case constants.MESSAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case constants.MESSAGES_SUCCESS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                messages: action.payload\r\n            };\r\n        case constants.MESSAGES_FAIL_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n\r\n        case constants.MESSAGES_ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { IConversation } from \"../interfaces/IConversation\"\r\n\r\nexport const sortConversationByDate = (dates: IConversation[]) => {\r\n    return dates.sort((a: IConversation, b: IConversation) => {\r\n        return +new Date(a.lastMessage.createdAt) - +new Date(b.lastMessage.createdAt);\r\n    }).reverse()\r\n}","import { IConversation } from \"../../interfaces/IConversation\";\r\nimport { IMessage } from \"../../interfaces/IMessage\";\r\nimport { sortConversationByDate } from \"../../utils/sortConversationByDate\";\r\nimport { constants } from \"../constants\";\r\nimport { IAction } from \"../store\";\r\n\r\ninterface ConversationsState {\r\n    conversations: IConversation[],\r\n    loading: boolean\r\n}\r\n\r\nconst initialState: ConversationsState = {\r\n    loading: true,\r\n    conversations: []\r\n};\r\n\r\nexport const conversationsReducer = (state = initialState, action: IAction): ConversationsState => {\r\n    switch (action.type) {\r\n        case constants.CONVERSATIONS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case constants.CONVERSATIONS_SUCCESS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                conversations: sortConversationByDate(action.payload)\r\n            };\r\n        case constants.CONVERSATIONS_FAIL_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case constants.CONVERSATIONS_ADD_CONVERSATION:\r\n            return {\r\n                ...state,\r\n                conversations: [action.payload, ...state.conversations]\r\n            }\r\n        case constants.CONVERSATIONS_UPDATE_LAST_MESSAGE:\r\n            const { _id, conversation, text, createdAt, createdBy, updatedAt } = action.payload\r\n            const lastMessage: IMessage = {\r\n                _id,\r\n                text,\r\n                conversation: conversation._id,\r\n                createdBy: createdBy._id,\r\n                createdAt,\r\n                updatedAt\r\n            }\r\n\r\n            const updated = state.conversations.map(item => {\r\n                if (item._id === action.payload.conversation._id) {\r\n                    return { ...item, lastMessage }\r\n                }\r\n                return item\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                conversations: sortConversationByDate(updated)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { IError } from \"../../interfaces/IError\";\r\nimport { constants } from \"../constants\";\r\nimport { IAction } from \"../store\";\r\n\r\ninterface ErrorsState {\r\n    error?: IError,\r\n}\r\n\r\nconst initialState: ErrorsState = {};\r\n\r\nexport const errorsReducer = (state = initialState, action: IAction): ErrorsState => {\r\n    switch (action.type) {\r\n        case constants.CATCH_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n        case constants.REMOVE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: undefined\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { authReducer } from \"./reducers/auth\";\r\nimport { messagesReducer } from \"./reducers/messages\";\r\nimport { conversationsReducer } from \"./reducers/conversations\";\r\nimport { errorsReducer } from \"./reducers/errors\";\r\n\r\nexport interface IAction {\r\n    type: string,\r\n    payload?: any,\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    messages: messagesReducer,\r\n    conversations: conversationsReducer,\r\n    errors: errorsReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);","import ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport { store } from \"./redux/store\";\r\n\r\nimport \"./assets/styles/common.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Conversations_loader__3C4cM\",\"empty\":\"Conversations_empty__f4tGa\",\"conversationsWrapper\":\"Conversations_conversationsWrapper__13iIQ\",\"conversations\":\"Conversations_conversations__1Jk_5\",\"conversationsList\":\"Conversations_conversationsList__2sd4r\",\"logo\":\"Conversations_logo__3r70z\",\"conversationInfo\":\"Conversations_conversationInfo__ljuJL\",\"text\":\"Conversations_text__2micG\",\"name\":\"Conversations_name__k8DqI\",\"icons\":\"Conversations_icons__y0aZc\",\"tooltip\":\"Conversations_tooltip__2OVms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toastContainer\":\"Toast_toastContainer__3LOni\",\"toast\":\"Toast_toast__1eJK8\",\"closedToast\":\"Toast_closedToast__2jPht\",\"toastContent\":\"Toast_toastContent__3Z8lJ\",\"toastIcon\":\"Toast_toastIcon__1VlGQ\",\"toastClose\":\"Toast_toastClose__29agJ\",\"toastCloseIcon\":\"Toast_toastCloseIcon__2k_4w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"MessageItem_user__1_KIg\",\"leftMessage\":\"MessageItem_leftMessage__3nElN\",\"leftTime\":\"MessageItem_leftTime__CvbdA\",\"leftText\":\"MessageItem_leftText__3P3bD\",\"rightMessage\":\"MessageItem_rightMessage__2zJ_w\",\"rightTime\":\"MessageItem_rightTime__1efp-\",\"rightText\":\"MessageItem_rightText__1g1aP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emojis\":\"EmojiMenu_emojis__tXRbu\",\"emojisList\":\"EmojiMenu_emojisList__195sa\",\"emojisListHide\":\"EmojiMenu_emojisListHide__1z034\",\"emoji\":\"EmojiMenu_emoji__1lPKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversation\":\"ConversationItem_conversation__Ma1wR\",\"active\":\"ConversationItem_active__1y9Rb\",\"text\":\"ConversationItem_text__2Jx7Y\",\"name\":\"ConversationItem_name__1xkac\",\"message\":\"ConversationItem_message__38thm\",\"time\":\"ConversationItem_time___oR81\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"Modal_modalWrapper__3oO7k\",\"modalWrapperHide\":\"Modal_modalWrapperHide__oIKhC\",\"modal\":\"Modal_modal__2Tcfg\",\"modalHide\":\"Modal_modalHide__2eiXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__EQ7fQ\",\"loadingWrapper\":\"Button_loadingWrapper__3ko1N\",\"showLoading\":\"Button_showLoading__3Uvwa\",\"hideLoading\":\"Button_hideLoading__2SYTP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Logo_link__1aDBr\",\"icon\":\"Logo_icon__1ps-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2HWoM\",\"circular\":\"Loader_circular__39jY9\",\"rotate\":\"Loader_rotate__1qJF2\",\"path\":\"Loader_path__3bK0n\",\"dash\":\"Loader_dash__M0Rq1\",\"color\":\"Loader_color__uwP9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Search_form__2tkVG\",\"input\":\"Search_input__3-M3e\",\"button\":\"Search_button__Bo7Or\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starter\":\"ChatStarter_starter__3y4AI\",\"icon\":\"ChatStarter_icon__30pju\",\"subtitle\":\"ChatStarter_subtitle__1W9sC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__x28Vm\",\"navbarInner\":\"Navbar_navbarInner__1eMQN\",\"menu\":\"Navbar_menu__2IfAg\",\"menuIcon\":\"Navbar_menuIcon__2ZPFr\",\"header\":\"Navbar_header__1IKBu\",\"text\":\"Navbar_text__2YNxT\",\"name\":\"Navbar_name__3X2G7\",\"email\":\"Navbar_email__qp1za\",\"nav\":\"Navbar_nav__3crdO\",\"navItem\":\"Navbar_navItem__B9bCc\",\"active\":\"Navbar_active__3A4RT\",\"navIcon\":\"Navbar_navIcon__1aJlv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Auth_form__Ef7h2\",\"inputWrapper\":\"Auth_inputWrapper__2orF_\",\"input\":\"Auth_input__1w2OD\",\"formLinkWrapper\":\"Auth_formLinkWrapper__3NuGX\",\"formLink\":\"Auth_formLink__3XL06\",\"formSpan\":\"Auth_formSpan__xjRfk\",\"error\":\"Auth_error__cSuJI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2pHI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1lvGg\"};"],"sourceRoot":""}